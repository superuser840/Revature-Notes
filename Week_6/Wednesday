
    AOP - aspect oriented programing
        more of a concept than an officiail language methodology base
        
        XML
            <aop: ...
        JAVA    
            @enableAspect
            @Advice

    Cross cutting concerns - things that cut accross multiple classes with tangential logic
        and be removed by AOP
            eg. Remove logger from classes and put it in its own class annotated with 
                @Aspect
                Class loggingAspect
                    @before("*app.*"())
                    public void mylogAdvice(){
                        logger logger...
                    }
            


Somethingmvc.xml is m view controller



Springmvc Application
    DispatcherServlet - main core (FrontController patter for WebApp context) - can set scope for beans
    
        Takes incoming request
        Foist talks to handler mapping (recieves URI with classes and @controllers and mappings)
        Essesntially takes in path and maps it to the specific mapped mehtod.
            Recieves /hello and maps to Hello(writer:hello()) in DispatcherServlet
                DispatcherServlet sends to viewResolver
                viewResolver looks inside all resources for html, jsp etc.
                Return - "hello"


    DispatcherServlet
    HandlerMapping
    Controler with mapped method
    to veiw Resolver with method return and sends viewResolver response

